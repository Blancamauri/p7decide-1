name: Python application

on: 
  push: 
    branches: 
      - master
  workflow_call:
    secrets:
      CODACY_PROJECT_TOKEN:
        required: true
      HEROKU_API_KEY:
        required: true
jobs:
  build:
    strategy:
      matrix:
        pyversion: ['3.5','3.8']
        pgversion: ['10.8','12']

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:${{matrix.pgversion}}
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - run: pip install psycopg2-binary
    - run: sudo dnf install python-devel postgresql-devel rpm-build
    - run: pip install psycopg2
    - run: sudo apt install libpq-dev python3-dev
    - run: sudo apt install build-essential
    - run: sudo apt install libpq-dev
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pyversion}}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage
    - name: Run migrations
      run: cd decide;python manage.py migrate
    - name: Run tests
      #run: cd decide;coverage run --branch --source=. ./manage.py test census --keepdb --with-xunit; coverage xml; 
      run: cd decide;coverage run --branch --source=. ./manage.py test census --keepdb; coverage xml; 
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml 
  deploy:
    if: ${{github.ref == 'refs/heads/master' }}
    needs: build 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "decideajrci" 
          heroku_email: "ajramriez@us.es"

